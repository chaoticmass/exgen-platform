Project exgen is up to date.
Project illution is up to date.
Installing exgen 0.27A.
Installation success.
Spawning thread
thread is born 0xb59ffb70
Listening on port 2600.
Window finished. Surface is 6
Window finished. Surface is 10
Render_loop() -- No arguments given.
Keycode: 54, Keyval: 0
global = {}
  global["exit"] = function
  global["filemtime"] = function
  global["j_y"] =   62
  global["i_y"] =   6
  global["h_y"] =   62
  global["surface_get_text_length"] = function
  global["get_surface_forecolor"] = function
  global["vt_inject"] = function
  global["set_render_mode"] = function
  global["set_surface_parent"] = function
  global["set_surface_forecolor"] = function
  global["a_y"] =   29
  global["next_focus"] = function
  global["set_surface_backcolor"] = function
  global["download_file"] = function
  global["mid_y"] =   40.683637619019
  global["get_camera_x"] = function
  global["v_y"] =   12
  global["set_matrix_rotation"] = function
  global["t_y"] =   12
  global["s_y"] =   12
  global["r_y"] =   -14
  global["get_surface_backcolor"] = function
  global["tex"] = {}
  global["o_y"] =   56.170120239258
  global["n_y"] =   12
  global["m_y"] =   12
  global["create_matrix"] = function
  global["screen"] = {}
  global["get_surface_alpha"] = function
  global["set_camera_x"] = function
  global["set_surface_on_lost_focus"] = function
  global["u_x"] =   0
  global["v_x"] =   -9
  global["list_files"] = function
  global["set_matrix_x"] = function
  global["run_script_reuse"] = function
  global["main"] = {}
  global["get_render_mode"] = function
  global["body_get_rotation"] = function
  global["get_matrix_x"] = function
  global["set_surface_on_draw"] = function
  global["screen_width"] = function
  global["get_surface_width"] = function
  global["set_surface_dirty"] = function
  global["get_surface_can_have_focus"] = function
  global["print"] = function
  global["set_surface_height"] = function
  global["twosixfour"] =   268
  global["set_surface_width"] = function
  global["vt_create"] = function
  global["get_surface_noevents"] = function
  global["set_surface_can_have_focus"] = function
  global["latex_interface"] = {}
    global["latex_interface"]["new"] = function
  global["mouse_lr"] = function
  global["get_surface_dirty"] = function
  global["global_on_keypress"] = function
  global["collectgarbage"] = function
  global["get_camera_pitch"] = function
  global["create_worldspace"] = function
  global["set_camera_pitch"] = function
  global["source"] =   "\\\\ttfarvoreg Solution Integration Agency \\\\newline \
\\\\begin{tikzpicture}\
\\\\filldraw[line width=.1pt,color=black]\
 (0, 0) -- (0.0, 0.01) -- (0.01, 0.01) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(7.375, -6.5) -- (4.75, -2.375) -- (7.75, -5.75) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(7.375, -6.5) -- (4.75, -2.375) -- (3.375, -1.75) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(3.375, -1.75) -- (4.75, -2.375) -- (10, -1.75) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(10, -1.75) -- (4.75, -2.375) -- (9.625, -2.375) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(3, -2.25) -- (5.625, -6.375) -- (2.625, -3) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(3, -2.25) -- (5.625, -6.375) -- (7.125, -7) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(7.125, -7) -- (5.625, -6.375) -- (0.5, -7) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(0.5, -7) -- (5.625, -6.375) -- (0.875, -6.375) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(7.75, -7) -- (10.75, -1.75) -- (8.625, -7) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(8.625, -7) -- (11.625, -1.75) -- (10.75, -1.75) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(9.375, -7) -- (12.25, -3.125) -- (10.25, -7) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(9.375, -7) -- (12.25, -3.125) -- (12.25, -1.75) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(12.25, -1.75) -- (12.25, -3.125) -- (15.25, -7) -- cycle;\
\\\\fill[line width=0.1pt, color=black]\
(15.25, -7) -- (12.25, -3.125) -- (14.375, -7) -- cycle;\
\\\\draw[xstep=0.25, ystep=0.25, color=gray]\
 (0,-8.5) grid (15.75, 0);\
\\\\end{tikzpicture}\
"
  global["mrecv"] = function
  global["camera_class"] = {}
    global["camera_class"]["new"] = function
  global["destroy_worldspace"] = function
  global["reinit"] = function
  global["set_camera_bitmap"] = function
  global["grid_visible"] =   1
  global["run_script_thread_reuse"] = function
  global["get_rgb"] = function
  global["get_surface_by_xy"] = function
  global["get_surface_transparent"] = function
  global["lua_init_script"] =   "include(\"lib/application.lua\");\
include(\"lib/gui.lua\");\
include(\"lib/term.lua\");\
include(\"lib/db.lua\");\
"
  global["get_camera_bitmap"] = function
  global["selected_face"] =   0
  global["set_window_title"] = function
  global["msend"] = function
  global["v1"] =   0
  global["set_surface_always_on_top"] = function
  global["model_class"] = {}
    global["model_class"]["new"] = function
  global["initialize_camera"] = function
  global["gcinfo"] = function
  global["x1"] =   121.95596177838
  global["set_surface_on_mouse_click"] = function
  global["tick"] = function
  global["mouse_cursor"] = {}
    global["mouse_cursor"]["new"] = function
  global["getfenv"] = function
  global["model_add_face"] = function
  global["d1"] =   37.451857351854
  global["u"] =   0
  global["v"] =   0
  global["y"] =   663
  global["io"] = {}
    global["io"]["popen"] = function
    global["io"]["write"] = function
    global["io"]["close"] = function
    global["io"]["flush"] = function
    global["io"]["open"] = function
    global["io"]["output"] = function
    global["io"]["type"] = function
    global["io"]["read"] = function
    global["io"]["stderr"] = function
    global["io"]["stdin"] = function
    global["io"]["input"] = function
    global["io"]["stdout"] = function
    global["io"]["lines"] = function
    global["io"]["tmpfile"] = function
  global["set_camera_heading"] = function
  global["origin_x"] =   -68
  global["set_surface_on_keypress"] = function
  global["surface_get_pixel"] = function
  global["get_surface_bitmap"] = function
  global["create_3d_rectangle"] = function
  global["file_exists"] = function
  global["surface_has_focus"] = function
  global["client_interface"] = {}
    global["client_interface"]["new"] = function
  global["c1"] =   10354688
  global["get_camera_heading"] = function
  global["surface_rect_fill"] = function
  global["include"] = function
  global["savefile"] = function
  global["run_stringthread"] = function
  global["chmod"] = function
  global["get_surface_screen_y"] = function
  global["get_camera_y"] = function
  global["destroy_surface"] = function
  global["password"] = {}
    global["password"]["new"] = function
  global["set_camera_y"] = function
  global["set_debug_mode"] = function
  global["render_model_gouraud"] = function
  global["get_surface_x"] = function
  global["worldspace_class"] = {}
    global["worldspace_class"]["new"] = function
  global["xpcall"] = function
  global["v3"] =   0
  global["y3"] =   56.170120239258
  global["x3"] =   114.67744006597
  global["_VERSION"] =   "Lua 5.0.3"
  global["listen"] = function
  global["create_model"] = function
  global["__pow"] = function
  global["set_surface_z"] = function
  global["require"] = function
  global["vt_fgcolor"] = function
  global["origin_y"] =   -30
  global["entity_count"] =   4
  global["next"] = function
  global["surface_transparent_blit"] = function
  global["get_surface_z"] = function
  global["amount"] =   0.01
  global["rawequal"] = function
  global["model"] = {}
    global["model"][1] = {}
    global["model"][2] = {}
    global["model"][3] = {}
    global["model"][4] = {}
  global["timer"] = function
  global["x"] =   1040
  global["newproxy"] = function
  global["measure"] = function
  global["r_x"] =   0
  global["u2"] =   0
  global["v2"] =   0
  global["label"] = {}
    global["label"]["new"] = function
  global["x2"] =   98.300792754272
  global["y2"] =   25.197154998779
  global["get_matrix_y"] = function
  global["connect"] = function
  global["vt_dirty"] = function
  global["selected_entity"] =   1
  global["yield"] = function
  global["selected_vertex"] =   0
  global["entity"] = {}
    global["entity"][1] = {}
    global["entity"][2] = {}
    global["entity"][3] = {}
    global["entity"][4] = {}
  global["selected_model"] =   3
  global["vt_cursor_row"] = function
  global["face_count"] =   63
  global["d2"] =   45.574581026217
  global["m_x"] =   -8
  global["latex_scale_y"] =   0.125
  global["u_y"] =   -7
  global["latex_height"] =   8.5
  global["latex_width"] =   15.75
  global["print_scale"] =   0.5
  global["surface_save_jpg"] = function
  global["application"] = {}
    global["application"]["new"] = function
  global["scale_y"] =   5
  global["basicSerialize"] = function
  global["setfenv"] = function
  global["set_matrix_r_y"] = function
  global["get_surface_rotation"] = function
  global["body_set_rotation"] = function
  global["reset_entities"] = function
  global["vt_convscan"] = function
  global["p_y"] =   -14
  global["include_string"] = function
  global["mid_x"] =   110.12837726633
  global["d3"] =   36.66031417067
  global["create_body"] = function
  global["surface_line"] = function
  global["z3"] =   0
  global["list_directories"] = function
  global["u3"] =   0
  global["z2"] =   0
  global["readkey"] = function
  global["setvar"] = function
  global["mod_load"] = function
  global["z1"] =   0
  global["vt_update"] = function
  global["u1"] =   0
  global["frame_duration"] =   0.01
  global["pairs"] = function
  global["fps"] =   100
  global["ws"] = {}
  global["assert"] = function
  global["t_y2"] =   26.824283398582
  global["j_x"] =   232
  global["a"] =   2.8421507708451
  global["y4"] =   29
  global["x4"] =   41.6
  global["y1"] =   56.170120239258
  global["set_focus"] = function
  global["gradient"] = function
  global["grid_source"] =   "\\\\draw[xstep=0.25, ystep=0.25, color=gray]\
 (0,-8.5) grid (15.75, 0);\
"
  global["exgen_install"] = function
  global["vt_keypress"] = function
  global["anchor_step_x"] =   -14.9
  global["anchor_span_y"] =   23
  global["fork"] = function
  global["_LOADED"] = {}
  global["destroy_body"] = function
  global["anchor_span_x"] =   -74.5
  global["thread"] =   "id-1076385824"
  global["echo"] = function
  global["anchor_count"] =   5
  global["get_matrix_r_y"] = function
  global["q_x"] =   -13
  global["replace"] = function
  global["stop_render"] = function
  global["coroutine"] = {}
    global["coroutine"]["resume"] = function
    global["coroutine"]["yield"] = function
    global["coroutine"]["status"] = function
    global["coroutine"]["wrap"] = function
    global["coroutine"]["create"] = function
  global["run_script"] = function
  global["set_thread_priority"] = function
  global["bottom_anchor_y"] =   29
  global["getvar"] = function
  global["t_x2"] =   -0.052570138885633
  global["vt_forkpty"] = function
  global["i_x"] =   216.5
  global["h_x"] =   201
  global["g_y"] =   62
  global["loadstring"] = function
  global["plane_set_geom"] = function
  global["set_surface_noevents"] = function
  global["f_y"] =   6
  global["set_surface_tab_index"] = function
  global["exec"] = function
  global["surface_clear"] = function
  global["f_x"] =   52.5
  global["create_cube"] = function
  global["string"] = {}
    global["string"]["sub"] = function
    global["string"]["gfind"] = function
    global["string"]["rep"] = function
    global["string"]["gsub"] = function
    global["string"]["char"] = function
    global["string"]["dump"] = function
    global["string"]["find"] = function
    global["string"]["upper"] = function
    global["string"]["len"] = function
    global["string"]["format"] = function
    global["string"]["byte"] = function
    global["string"]["lower"] = function
  global["e_y"] =   62
  global["e_x"] =   37
  global["d_y"] =   15.486482620239
  global["set_surface_on_got_focus"] = function
  global["sendall"] = function
  global["c_y"] =   29
  global["get_matrix_scale"] = function
  global["b_y"] =   34
  global["b_x"] =   0
  global["table"] = {}
    global["table"]["setn"] = function
    global["table"]["insert"] = function
    global["table"]["getn"] = function
    global["table"]["foreachi"] = function
    global["table"]["foreach"] = function
    global["table"]["sort"] = function
    global["table"]["remove"] = function
    global["table"]["concat"] = function
  global["set_surface_transparent"] = function
  global["round"] = function
  global["listbox"] = {}
    global["listbox"]["new"] = function
  global["container"] = {}
    global["container"]["new"] = function
  global["p_x"] =   5
  global["set_surface_visible"] = function
  global["vt_write"] = function
  global["n_x"] =   -4
  global["get_camera_z"] = function
  global["model_count"] =   4
  global["set_surface_transcolor"] = function
  global["ipairs"] = function
  global["latex_precision"] =   0
  global["fc"] =   4
  global["set_matrix_z"] = function
  global["latex_scale_x"] =   0.125
  global["q_y"] =   12
  global["get_surface_visible"] = function
  global["t_x"] =   9
  global["set_surface_on_mouse_down"] = function
  global["set_camera_z"] = function
  global["resolv"] = function
  global["vertex_controls"] =   0
  global["top_anchor_y"] =   6
  global["plot_point"] = function
  global["download_string"] = function
  global["c3"] =   10354688
  global["c2"] =   10354688
  global["d"] =   1
  global["set_model_offset"] = function
  global["grid"] = {}
  global["set_surface_bitmap"] = function
  global["viewer"] = {}
  global["print_output"] = {}
  global["set_model_face_data"] = function
  global["surface_load_gif"] = function
  global["hidden"] = {}
    global["hidden"]["new"] = function
  global["type"] = function
  global["bg"] = {}
  global["mouse"] = {}
  global["body_font"] = {}
  global["title_font"] = {}
  global["save"] = function
  global["get_surface_y"] = function
  global["create_indiebridge_logo"] = function
  global["tonumber"] = function
  global["get_model_face_data"] = function
  global["set_surface_y"] = function
  global["mouse_xy"] = function
  global["get_thread_count"] = function
  global["surface_load_jpg"] = function
  global["loadfile"] = function
  global["render"] = function
  global["openfile"] = function
  global["create_sia_logo_s"] = function
  global["close"] = function
  global["tikz_logo"] = function
  global["create_sia_logo"] = function
  global["reference"] = {}
    global["reference"]["getvar"] = {}
      global["reference"]["getvar"]["module"] =       "core"
      global["reference"]["getvar"]["arguments"] =       "STRING table, STRING key"
      global["reference"]["getvar"]["longdescription"] =       "Retrieves data from the global data store, which is accessable by all scripts, threads, and modules."
      global["reference"]["getvar"]["description"] =       "Returns the value of a key given by key from the table given by table."
    global["reference"]["openfile"] = {}
      global["reference"]["openfile"]["module"] =       "core"
      global["reference"]["openfile"]["arguments"] =       "STRING filename"
      global["reference"]["openfile"]["longdescription"] =       ""
      global["reference"]["openfile"]["description"] =       "Returns the contents of the file given by filename."
    global["reference"]["close"] = {}
      global["reference"]["close"]["module"] =       "core"
      global["reference"]["close"]["arguments"] =       "STRING handle"
      global["reference"]["close"]["longdescription"] =       ""
      global["reference"]["close"]["description"] =       "Closes the network connection given by handle."
    global["reference"]["mod_isloaded"] = {}
      global["reference"]["mod_isloaded"]["module"] =       "core"
      global["reference"]["mod_isloaded"]["arguments"] =       "STRING module_name"
      global["reference"]["mod_isloaded"]["longdescription"] =       ""
      global["reference"]["mod_isloaded"]["description"] =       "Tests to see if a module is loaded. Returns 1 if the given module is loaded, 0 if it is not."
    global["reference"]["mod_unload"] = {}
      global["reference"]["mod_unload"]["module"] =       "core"
      global["reference"]["mod_unload"]["arguments"] =       "STRING module_name"
      global["reference"]["mod_unload"]["longdescription"] =       "The use of this is discouraged as it can lead to program instability."
      global["reference"]["mod_unload"]["description"] =       "Unloads the previously loaded module given by module_name."
    global["reference"]["listen"] = {}
      global["reference"]["listen"]["module"] =       "core"
      global["reference"]["listen"]["arguments"] =       "NUMBER port, STRING ip"
      global["reference"]["listen"]["longdescription"] =       "Must provide a port to listen on. May provide an IP to listen on but this is optional. IP may be left blank to listen on all IPs. Returns a handle."
      global["reference"]["listen"]["description"] =       "Listens for incoming network connections."
    global["reference"]["list_directories"] = {}
      global["reference"]["list_directories"]["module"] =       "core"
      global["reference"]["list_directories"]["arguments"] =       "STRING path"
      global["reference"]["list_directories"]["longdescription"] =       ""
      global["reference"]["list_directories"]["description"] =       "Returns an array containing all the directories within the given path."
    global["reference"]["setvar"] = {}
      global["reference"]["setvar"]["module"] =       "core"
      global["reference"]["setvar"]["arguments"] =       "STRING table, STRING key, STRING value"
      global["reference"]["setvar"]["longdescription"] =       "Modifies data in the global data store, which is accessable by all scripts, threads, and modules."
      global["reference"]["setvar"]["description"] =       "Stores the key/value pair given by key and value respectively in the table given by table."
    global["reference"]["mod_load"] = {}
      global["reference"]["mod_load"]["module"] =       "core"
      global["reference"]["mod_load"]["arguments"] =       "STRING module_name"
      global["reference"]["mod_load"]["longdescription"] =       ""
      global["reference"]["mod_load"]["description"] =       "Loads a binary module into the current thread."
    global["reference"]["mod_loadthread"] = {}
      global["reference"]["mod_loadthread"]["module"] =       "core"
      global["reference"]["mod_loadthread"]["arguments"] =       "STRING module_name"
      global["reference"]["mod_loadthread"]["longdescription"] =       "Loading a module into a new thread allows it to perform long running tasks asynchronously."
      global["reference"]["mod_loadthread"]["description"] =       "Loads a binary module into a new thread."
    global["reference"]["vt_create"] = {}
      global["reference"]["vt_create"]["module"] =       "core"
      global["reference"]["vt_create"]["arguments"] =       ""
      global["reference"]["vt_create"]["longdescription"] =       ""
      global["reference"]["vt_create"]["description"] =       "Returns a pointer to a new virtual terminal."
    global["reference"]["vt_bgcolor"] = {}
      global["reference"]["vt_bgcolor"]["module"] =       "core"
      global["reference"]["vt_bgcolor"]["arguments"] =       "VT *vt, int row, int col"
      global["reference"]["vt_bgcolor"]["longdescription"] =       ""
      global["reference"]["vt_bgcolor"]["description"] =       "Returns the background color attribute at the specified row and column of the virtual terminal."
    global["reference"]["exgen_install"] = {}
      global["reference"]["exgen_install"]["module"] =       "core"
      global["reference"]["exgen_install"]["arguments"] =       ""
      global["reference"]["exgen_install"]["longdescription"] =       ""
      global["reference"]["exgen_install"]["description"] =       "Attempt to install self."
    global["reference"]["accept"] = {}
      global["reference"]["accept"]["module"] =       "core"
      global["reference"]["accept"]["arguments"] =       "STRING handle"
      global["reference"]["accept"]["longdescription"] =       ""
      global["reference"]["accept"]["description"] =       "Accepts a connection given by handle."
    global["reference"]["vt_forsake_child"] = {}
      global["reference"]["vt_forsake_child"]["module"] =       "core"
      global["reference"]["vt_forsake_child"]["arguments"] =       "VT *vt"
      global["reference"]["vt_forsake_child"]["longdescription"] =       ""
      global["reference"]["vt_forsake_child"]["description"] =       "see man page"
    global["reference"]["vt_cursor_col"] = {}
      global["reference"]["vt_cursor_col"]["module"] =       "core"
      global["reference"]["vt_cursor_col"]["arguments"] =       "VT *vt"
      global["reference"]["vt_cursor_col"]["longdescription"] =       ""
      global["reference"]["vt_cursor_col"]["description"] =       "Returns the current column of the cursor in the virtual terminal."
    global["reference"]["shutdown"] = {}
      global["reference"]["shutdown"]["module"] =       "core"
      global["reference"]["shutdown"]["arguments"] =       ""
      global["reference"]["shutdown"]["longdescription"] =       ""
      global["reference"]["shutdown"]["description"] =       "Unload all modules, terminate all running scripts, threads, and end the application."
    global["reference"]["include_string"] = {}
      global["reference"]["include_string"]["module"] =       "core"
      global["reference"]["include_string"]["arguments"] =       "STRING script"
      global["reference"]["include_string"]["longdescription"] =       "Useful for defining configuration files that can be loaded at run-time, for splitting a single script into multiple files, or for implementing your own Lua script libraries."
      global["reference"]["include_string"]["description"] =       "Loads a Lua script into the current script."
    global["reference"]["vt_dirty"] = {}
      global["reference"]["vt_dirty"]["module"] =       "core"
      global["reference"]["vt_dirty"]["arguments"] =       "VT *vt"
      global["reference"]["vt_dirty"]["longdescription"] =       ""
      global["reference"]["vt_dirty"]["description"] =       "Returns TRUE if the virtual terminal has changed. Use this to tell if the virtual terminal needs to be rendered again."
    global["reference"]["inkey"] = {}
      global["reference"]["inkey"]["module"] =       "core"
      global["reference"]["inkey"]["arguments"] =       ""
      global["reference"]["inkey"]["longdescription"] =       ""
      global["reference"]["inkey"]["description"] =       "Returns the value of last key pressed by the user."
    global["reference"]["vt_keypress"] = {}
      global["reference"]["vt_keypress"]["module"] =       "core"
      global["reference"]["vt_keypress"]["arguments"] =       "VT *vt, int key"
      global["reference"]["vt_keypress"]["longdescription"] =       ""
      global["reference"]["vt_keypress"]["description"] =       "Sends keypress to the process running in the virtual terminal."
    global["reference"]["mod_update"] = {}
      global["reference"]["mod_update"]["module"] =       "core"
      global["reference"]["mod_update"]["arguments"] =       ""
      global["reference"]["mod_update"]["longdescription"] =       ""
      global["reference"]["mod_update"]["description"] =       ""
    global["reference"]["fork"] = {}
      global["reference"]["fork"]["module"] =       "core"
      global["reference"]["fork"]["arguments"] =       ""
      global["reference"]["fork"]["longdescription"] =       ""
      global["reference"]["fork"]["description"] =       "See Unix fork()"
    global["reference"]["vt_inject"] = {}
      global["reference"]["vt_inject"]["module"] =       "core"
      global["reference"]["vt_inject"]["arguments"] =       "VT *vt, char *string"
      global["reference"]["vt_inject"]["longdescription"] =       ""
      global["reference"]["vt_inject"]["description"] =       "Sends string to the virtual terminal, bypassing any process that may be running in the virtual terminal."
    global["reference"]["vt_write"] = {}
      global["reference"]["vt_write"]["module"] =       "core"
      global["reference"]["vt_write"]["arguments"] =       "VT *vt, char *string"
      global["reference"]["vt_write"]["longdescription"] =       ""
      global["reference"]["vt_write"]["description"] =       "Sends string to the forked process running in the virtual terminal."
    global["reference"]["vt_fgcolor"] = {}
      global["reference"]["vt_fgcolor"]["module"] =       "core"
      global["reference"]["vt_fgcolor"]["arguments"] =       "VT *vt, int row, int col"
      global["reference"]["vt_fgcolor"]["longdescription"] =       ""
      global["reference"]["vt_fgcolor"]["description"] =       "Returns the foreground color attribute at the specified row and column of the virtual terminal."
    global["reference"]["connect"] = {}
      global["reference"]["connect"]["module"] =       "core"
      global["reference"]["connect"]["arguments"] =       "NUMBER port, STRING ip"
      global["reference"]["connect"]["longdescription"] =       ""
      global["reference"]["connect"]["description"] =       "Opens and returns a handle to a network connection."
    global["reference"]["quit"] = {}
      global["reference"]["quit"]["module"] =       "core"
      global["reference"]["quit"]["arguments"] =       ""
      global["reference"]["quit"]["longdescription"] =       ""
      global["reference"]["quit"]["description"] =       "Alias for shutdown."
    global["reference"]["vt_convscan"] = {}
      global["reference"]["vt_convscan"]["module"] =       "core"
      global["reference"]["vt_convscan"]["arguments"] =       "VT *vt, int scancode"
      global["reference"]["vt_convscan"]["longdescription"] =       "Explantion/Example: Pressing the UP key is scancode 84. To send the UP key to the virtual terminal you use convscan to converty 84 to 256, which the virtual terminal recognizes as UP."
      global["reference"]["vt_convscan"]["description"] =       "Converts scancode to terminal code."
    global["reference"]["yield"] = {}
      global["reference"]["yield"]["module"] =       "core"
      global["reference"]["yield"]["arguments"] =       ""
      global["reference"]["yield"]["longdescription"] =       ""
      global["reference"]["yield"]["description"] =       "Explicitly force the current thread to yield its processor timeslice to the next thread."
    global["reference"]["vt_char"] = {}
      global["reference"]["vt_char"]["module"] =       "core"
      global["reference"]["vt_char"]["arguments"] =       "VT *vt, int row, int col"
      global["reference"]["vt_char"]["longdescription"] =       ""
      global["reference"]["vt_char"]["description"] =       "Returns the character at the specified row and column of the virtual terminal."
    global["reference"]["replace"] = {}
      global["reference"]["replace"]["module"] =       "core"
      global["reference"]["replace"]["arguments"] =       "STRING find_text, STRING replace_text, STRING text"
      global["reference"]["replace"]["longdescription"] =       ""
      global["reference"]["replace"]["description"] =       "Finds each occurance of find_text in text and replaces it with replace_text"
    global["reference"]["reinit"] = {}
      global["reference"]["reinit"]["module"] =       "core"
      global["reference"]["reinit"]["arguments"] =       ""
      global["reference"]["reinit"]["longdescription"] =       "When a module is loaded, all subsequently started scripts will be able to use an extended functionality offered by the function. Scripts started before the module was loaded however will not be able to use the functionality unless the script is reinitialized. Use reinit after loading a module to be able to use any new functions the module provides."
      global["reference"]["reinit"]["description"] =       "Reinitialize the current Lua script."
    global["reference"]["vt_cursor_row"] = {}
      global["reference"]["vt_cursor_row"]["module"] =       "core"
      global["reference"]["vt_cursor_row"]["arguments"] =       "VT *vt"
      global["reference"]["vt_cursor_row"]["longdescription"] =       ""
      global["reference"]["vt_cursor_row"]["description"] =       "Returns the current row of the cursor in the virtual terminal."
    global["reference"]["run_script"] = {}
      global["reference"]["run_script"]["module"] =       "core"
      global["reference"]["run_script"]["arguments"] =       "STRING script_file"
      global["reference"]["run_script"]["longdescription"] =       "Running a script in the current thread causes the calling script to halt until the child script exits."
      global["reference"]["run_script"]["description"] =       "Loads and executes a Lua script given by script_file in the current thread."
    global["reference"]["list_files"] = {}
      global["reference"]["list_files"]["module"] =       "core"
      global["reference"]["list_files"]["arguments"] =       "STRING path"
      global["reference"]["list_files"]["longdescription"] =       ""
      global["reference"]["list_files"]["description"] =       "Returns an array containing all the files within the given path."
    global["reference"]["savefile"] = {}
      global["reference"]["savefile"]["module"] =       "core"
      global["reference"]["savefile"]["arguments"] =       "STRING filename, STRING contents"
      global["reference"]["savefile"]["longdescription"] =       ""
      global["reference"]["savefile"]["description"] =       "Writes the value given by contents to the file given by filename."
    global["reference"]["vt_update"] = {}
      global["reference"]["vt_update"]["module"] =       "core"
      global["reference"]["vt_update"]["arguments"] =       "VT *vt"
      global["reference"]["vt_update"]["longdescription"] =       ""
      global["reference"]["vt_update"]["description"] =       "Updates the state of the virtual terminal."
    global["reference"]["chmod"] = {}
      global["reference"]["chmod"]["module"] =       "core"
      global["reference"]["chmod"]["arguments"] =       "STRING filename, NUMBER mode"
      global["reference"]["chmod"]["longdescription"] =       ""
      global["reference"]["chmod"]["description"] =       "Changes the mode of the file given by filename to the mode given by mode."
    global["reference"]["vt_forkpty"] = {}
      global["reference"]["vt_forkpty"]["module"] =       "core"
      global["reference"]["vt_forkpty"]["arguments"] =       "VT *vt, char *cmd"
      global["reference"]["vt_forkpty"]["longdescription"] =       ""
      global["reference"]["vt_forkpty"]["description"] =       "Forks *cmd into the virtual terminal *vt."
    global["reference"]["exit"] = {}
      global["reference"]["exit"]["module"] =       "core"
      global["reference"]["exit"]["arguments"] =       ""
      global["reference"]["exit"]["longdescription"] =       ""
      global["reference"]["exit"]["description"] =       "Alias for shutdown."
    global["reference"]["filemtime"] = {}
      global["reference"]["filemtime"]["module"] =       "core"
      global["reference"]["filemtime"]["arguments"] =       "STRING filename"
      global["reference"]["filemtime"]["longdescription"] =       ""
      global["reference"]["filemtime"]["description"] =       "Returns the modified time of the file given by filename. Time is formatted as a UNIX timestamp."
    global["reference"]["exgen_update"] = {}
      global["reference"]["exgen_update"]["module"] =       "core"
      global["reference"]["exgen_update"]["arguments"] =       ""
      global["reference"]["exgen_update"]["longdescription"] =       ""
      global["reference"]["exgen_update"]["description"] =       "Check for a newer version of exgen then download and install newer version if it exists."
    global["reference"]["file_exists"] = {}
      global["reference"]["file_exists"]["module"] =       "core"
      global["reference"]["file_exists"]["arguments"] =       "STRING filename"
      global["reference"]["file_exists"]["longdescription"] =       ""
      global["reference"]["file_exists"]["description"] =       "Returns 1 if the file given by filename exists. Returns 0 if it does not."
    global["reference"]["resolv"] = {}
      global["reference"]["resolv"]["module"] =       "core"
      global["reference"]["resolv"]["arguments"] =       "STRING hostname"
      global["reference"]["resolv"]["longdescription"] =       ""
      global["reference"]["resolv"]["description"] =       "Returns the IP address of the given hostname."
    global["reference"]["echo"] = {}
      global["reference"]["echo"]["module"] =       "core"
      global["reference"]["echo"]["arguments"] =       "STRING text"
      global["reference"]["echo"]["longdescription"] =       ""
      global["reference"]["echo"]["description"] =       "Print text to the screen."
    global["reference"]["help"] = {}
      global["reference"]["help"]["module"] =       "core"
      global["reference"]["help"]["arguments"] =       "STRING help_topic"
      global["reference"]["help"]["longdescription"] =       ""
      global["reference"]["help"]["description"] =       "Display help."
    global["reference"]["vt_clean"] = {}
      global["reference"]["vt_clean"]["module"] =       "core"
      global["reference"]["vt_clean"]["arguments"] =       "VT *vt"
      global["reference"]["vt_clean"]["longdescription"] =       ""
      global["reference"]["vt_clean"]["description"] =       "Resets the value of vt_dirty to FALSE. Use this after rendering the virtual terminal."
    global["reference"]["exec"] = {}
      global["reference"]["exec"]["module"] =       "core"
      global["reference"]["exec"]["arguments"] =       "STRING command"
      global["reference"]["exec"]["longdescription"] =       ""
      global["reference"]["exec"]["description"] =       "Execute a system command."
    global["reference"]["run_scriptthread"] = {}
      global["reference"]["run_scriptthread"]["module"] =       "core"
      global["reference"]["run_scriptthread"]["arguments"] =       "STRING script_file"
      global["reference"]["run_scriptthread"]["longdescription"] =       "Loading a script into a new thread allows it to perform long running tasks asynchronously, allowing the calling thread to continue before the child thread exits."
      global["reference"]["run_scriptthread"]["description"] =       "Loads and executes a Lua script given by script_file in a new thread."
    global["reference"]["include"] = {}
      global["reference"]["include"]["module"] =       "core"
      global["reference"]["include"]["arguments"] =       "STRING script_file"
      global["reference"]["include"]["longdescription"] =       "Useful for defining configuration files that can be loaded at run-time, for splitting a single script into multiple files, or for implementing your own Lua script libraries."
      global["reference"]["include"]["description"] =       "Loads a Lua script into the current script."
  global["mod_isloaded"] = function
  global["create_model_from_image"] = function
  global["render_model"] = function
  global["vsync"] = function
  global["surface_print_wordwrap"] = function
  global["button"] = {}
    global["button"]["new"] = function
  global["entity_class"] = {}
    global["entity_class"]["new"] = function
  global["mod_loadthread"] = function
  global["get_matrix_r_x"] = function
  global["tprint"] = function
  global["get_model_face_count"] = function
  global["terminal"] = {}
    global["terminal"]["new"] = function
  global["set_matrix_r_x"] = function
  global["window"] = {}
    global["window"]["new"] = function
  global["scrollbar"] = {}
    global["scrollbar"]["new"] = function
  global["vt_forsake_child"] = function
  global["textbox"] = global["password"]
  global["inputbox"] = global["password"]
  global["set_surface_rotation"] = function
  global["iconbox"] = {}
    global["iconbox"]["new"] = function
  global["print_window"] = {}
  global["surface"] = {}
    global["surface"]["new"] = function
  global["exgen_update"] = function
  global["get_thread_priority"] = function
  global["create_sia_logo_a"] = function
  global["get_matrix_z"] = function
  global["surface_load_animated_gif"] = function
  global["bottom_anchor_x"] =   -22
  global["get_surface_parent"] = function
  global["scale"] =   5
  global["_G"] = global
  global["tostring"] = function
  global["os"] = {}
    global["os"]["exit"] = function
    global["os"]["setlocale"] = function
    global["os"]["execute"] = function
    global["os"]["getenv"] = function
    global["os"]["difftime"] = function
    global["os"]["remove"] = function
    global["os"]["time"] = function
    global["os"]["clock"] = function
    global["os"]["tmpname"] = function
    global["os"]["rename"] = function
    global["os"]["date"] = function
  global["render_loop"] = function
  global["simulate"] = function
  global["body_set_position"] = function
  global["create_plane"] = function
  global["create_sia_logo_i"] = function
  global["anchor_step_y"] =   4.6
  global["surface_load_bmp"] = function
  global["recv"] = function
  global["top_anchor_x"] =   52.5
  global["surface_print"] = function
  global["surface_save_bmp"] = function
  global["create_camera"] = function
  global["get_surface_screen_x"] = function
  global["get_surface_tab_index"] = function
  global["initialize_video"] = function
  global["surface_rect"] = function
  global["set_surface_lua"] = function
  global["surface3d_class"] = {}
    global["surface3d_class"]["new"] = function
  global["pcall"] = function
  global["set_root_surface"] = function
  global["set_surface_position_absolute"] = function
  global["set_surface_on_mouse_up"] = function
  global["set_global_on_keypress"] = function
  global["branch"] = function
  global["c_x"] =   268
  global["d_x"] =   4.5490627996421
  global["a_x"] =   0
  global["get_matrix_r_z"] = function
  global["send"] = function
  global["set_surface_alpha"] = function
  global["set_matrix_scale"] = function
  global["render_model_wireframe"] = function
  global["vt_bgcolor"] = function
  global["image"] = {}
    global["image"]["new"] = function
  global["run_scriptthread"] = function
  global["unpack"] = function
  global["create_surface"] = function
  global["angle"] =   1.2850887318168
  global["inkey"] = function
  global["get_surface_transcolor"] = function
  global["s_x"] =   13
  global["set_surface_y_offset"] = function
  global["vt_char"] = function
  global["accept"] = function
  global["o_x"] =   114.67744006597
  global["update_camera"] = function
  global["run_string"] = function
  global["screen_height"] = function
  global["math"] = {}
    global["math"]["log"] = function
    global["math"]["atan"] = function
    global["math"]["ldexp"] = function
    global["math"]["deg"] = function
    global["math"]["tan"] = function
    global["math"]["cos"] = function
    global["math"]["pi"] =     3.1415926535898
    global["math"]["random"] = function
    global["math"]["randomseed"] = function
    global["math"]["frexp"] = function
    global["math"]["ceil"] = function
    global["math"]["floor"] = function
    global["math"]["rad"] = function
    global["math"]["max"] = function
    global["math"]["sqrt"] = function
    global["math"]["pow"] = function
    global["math"]["asin"] = function
    global["math"]["min"] = function
    global["math"]["mod"] = function
    global["math"]["exp"] = function
    global["math"]["log10"] = function
    global["math"]["atan2"] = function
    global["math"]["acos"] = function
    global["math"]["sin"] = function
    global["math"]["abs"] = function
  global["set_surface_font"] = function
  global["vt_cursor_col"] = function
  global["shutdown"] = function
  global["g_x"] =   68
  global["get_surface_y_offset"] = function
  global["getmetatable"] = function
  global["set_matrix_r_z"] = function
  global["update_matrix"] = function
  global["app"] = {}
  global["mod_update"] = function
  global["set_surface_x"] = function
  global["body_class"] = {}
    global["body_class"]["new"] = function
  global["rawset"] = function
  global["set_surface_x_offset"] = function
  global["unlock"] = function
  global["quit"] = function
  global["get_surface_position_absolute"] = function
  global["help"] = function
  global["get_surface_height"] = function
  global["body_get_position"] = function
  global["scale_x"] =   5
  global["makecol"] = function
  global["get_root_surface"] = function
  global["surface_stretch_blit"] = function
  global["surface_blit"] = function
  global["entity_controls"] =   1
  global["get_surface_x_offset"] = function
  global["surface_get_text_height"] = function
  global["vt_clean"] = function
  global["set_matrix_y"] = function
  global["rawget"] = function
  global["plot_mo